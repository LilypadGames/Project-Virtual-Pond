export class TwitchStream extends HTMLElement{static TWITCH_EMBED_URL="https://embed.twitch.tv/embed/v1.js";static get attributes(){return{channel:{},width:{default:940},height:{default:480},theme:{default:"dark"},muted:{default:!1},autoplay:{default:!0},chat:{default:!1},allowfullscreen:{default:!0},parent:{default:""}}}constructor(){super(),this.initialized=!1,this.attachShadow({mode:"open"})}connectedCallback(){this.setDefaults(),this.initializeTwitchEmbed(),this.render()}getPlayer(){return this.embed?this.embed.getPlayer():null}play(){this.embed.play()}pause(){this.embed.pause()}getChannel(){return this.embed.getChannel()}setChannel(a){this.setAttribute("channel",a),this.embed.setChannel(a)}getQualities(){return this.embed.getQualities()}setQuality(a){let b=this.embed.getQualities().map(a=>a.name);if(!b.includes(a))throw Error(`Quality is not valid. Valid qualities are ${b.join(", ")}`);this.embed.setQuality(a)}getMuted(){return this.embed.getMuted()}setMuted(a){a?this.setAttribute("muted",""):this.removeAttribute("muted",""),this.embed.setMuted(a)}getVolume(){return this.embed.getVolume()}setVolume(a){this.embed.setVolume(a)}async initializeTwitchEmbed(){window.Twitch||await this.importTwitch(),await this.newFrame();let a=this.shadowRoot.querySelector("#twitch-embed"),b=new Twitch.Embed(a,{width:this.width,height:this.height,channel:this.channel,theme:this.theme,muted:this.muted,autoplay:this.autoplay,layout:this.chat?"video-with-chat":"video",allowfullscreen:this.allowfullscreen,parent:this.parent});this.embed=b,this._setEmbedListeners(),this.initialized=!0}_setEmbedListeners(){this.embed.addEventListener(Twitch.Embed.VIDEO_READY,()=>{this.dispatchEvent(new CustomEvent("twitch-stream.video.ready",{detail:{embed:this.embed}}))}),this.embed.addEventListener(Twitch.Embed.VIDEO_PLAY,a=>{this.dispatchEvent(new CustomEvent("twitch-stream.video.play",{detail:{embed:this.embed,sessionId:a}}))}),["ENDED","PAUSE","PLAY","PLAYBACK_BLOCKED","PLAYING","OFFLINE","ONLINE","READY"].forEach(a=>{this.embed.addEventListener(Twitch.Player[a],async()=>{await this._handlePlayingState(a),this.dispatchEvent(new CustomEvent(`twitch-stream.${a.toLowerCase()}`,{detail:{embed:this.embed}}))})})}async _handlePlayingState(){await this.wait(50);let a=this.embed.isPaused();a?(this.setAttribute("paused",""),this.removeAttribute("playing")):(this.setAttribute("playing",""),this.removeAttribute("paused"))}wait(a){return new Promise(b=>setTimeout(b,a))}newFrame(){return new Promise(a=>window.requestAnimationFrame(a))}_handleAttributeChange(a){"channel"===a&&this.setChannel(this.channel)}importTwitch(){return new Promise((b,c)=>{let a=document.createElement("script");a.src=TwitchStream.TWITCH_EMBED_URL,document.head.appendChild(a),a.onload=b,a.onerror=c})}render(){let a=TwitchStream.template.content.cloneNode(!0);this.shadowRoot.innerHTML="",this.shadowRoot.appendChild(a)}static get template(){let a=document.createElement("template");return a.innerHTML='<div id="twitch-embed" style="height: 100%"></div>',a}setDefaults(){let a=TwitchStream.attributes;Object.keys(a).forEach(b=>{this[b]||(this[b]=a[b].default)})}attributeChangedCallback(b,c,a){c!==a&&(this[b]=""===a||a,this.initialized&&this._handleAttributeChange(b))}static get observedAttributes(){let a=TwitchStream.attributes;return Object.keys(a).filter(b=>void 0===a[b].watch||a[b].watch)}}customElements.get("twitch-stream")||customElements.define("twitch-stream",TwitchStream)